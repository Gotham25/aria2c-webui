
def ordered(String... dependencyPaths) {
    def dependencies = dependencyPaths.collect { tasks.getByPath(it) }
    for (int i = 0; i < dependencies.size() - 1; i++) {
        dependencies[i + 1].mustRunAfter(dependencies[i])
    }
    return dependencies
}

task buildApp(type: NpxTask) {
  dependsOn ordered('npmInstall', ':backend:setupAria2cBackend')
  command = 'ng'
  args = ['build']
  inputs.files('package.json', 'angular.json', 'angular.json', 'tsconfig.json', 'tsconfig.app.json')
  inputs.dir('src')
  inputs.dir(fileTree("node_modules").exclude(".cache"))
  outputs.dir('dist')
}

task runAria2AppFrontend(type: NpxTask) {
  command = 'ng'
  args = ['serve']
  inputs.files('package.json', 'angular.json', 'angular.json', 'tsconfig.json', 'tsconfig.app.json')
  inputs.dir('src')
  inputs.dir(fileTree("node_modules").exclude(".cache"))
  outputs.dir('dist')
}

