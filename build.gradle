
buildscript {
    dependencies {
        classpath "com.github.node-gradle:gradle-node-plugin:3.5.0"
        classpath "org.codehaus.groovy:groovy-json:3.0.9"
        classpath "com.bmuschko:gradle-docker-plugin:6.7.0"
    }

    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}

apply plugin: 'com.github.node-gradle.node'
apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

node {
    download = true
    version = "19.2.0"
}

subprojects {
    apply plugin: 'com.github.node-gradle.node'

    node {
        download = false
        version = "19.2.0"
    }
}


docker {
    registryCredentials {
        url = 'https://index.docker.io/v1/'
        username = 'taray26748'
        password = 'dckr_pat_1ie1uQ6merfX-8mLHJjaxpPPaHo'
        email = 'taray26748@kuvasin.com'
    }
}

task buildImage(type: DockerBuildImage) {
    inputDir = file('./')
    images.add('taray26748/gradle-nodejs-app:latest')
}


task publishToDockerHub(type: DockerPushImage, dependsOn: buildImage) {
    /* doFirst {
        docker.registryCredentials {
            url = "https://index.docker.io/v1/"
            username = "taray26748"
            password = "dckr_pat_1ie1uQ6merfX-8mLHJjaxpPPaHo"
            email = "taray26748@kuvasin.com"
        }
    } */
    images.add("taray26748/gradle-nodejs-app:latest")
}


tasks.register('setupNode') {
    description = "Downloads and set the node version"
    dependsOn("nodeSetup")
    doLast {
        println "Node setup completed..."
    }
}

tasks.register("installDependencies") {
    description = "Install the dependencies"
    dependsOn(":aria2-frontend:npmInstall", ":aria2-backend:npmInstall")
    mustRunAfter(":aria2-frontend:npmInstall", ":aria2-backend:npmInstall")
    doLast {
        println "Install dependencies completed..."
    }
}

tasks.register("build") {
    description = "Build the project"
    dependsOn(":aria2-frontend:build")
    doLast {
        println "Build completed..."
    }
}
